# This Makefile contains targets/recipes for building and interacting with a catking base docker image/context 
#
# The associated catkin_base image generated by this Makefile can be used for creating catkin workspaces or used
# as a basis for other more complicated docker contexts requiring catkin.
#
# Run the help target/recipe to get a list of actions that can be performed.

ifndef CATKIN_BASE_MAKEFILE_PATH

MAKEFLAGS += --no-print-directory

.EXPORT_ALL_VARIABLES:
CATKIN_BASE_PROJECT:=catkin_base

CATKIN_BASE_MAKEFILE_PATH:=$(shell realpath "$(shell dirname "$(lastword $(MAKEFILE_LIST))")")
MAKE_GADGETS_PATH:=${CATKIN_BASE_MAKEFILE_PATH}/adore_if_ros_msg/make_gadgets
REPO_DIRECTORY:=${CATKIN_BASE_MAKEFILE_PATH}

CATKIN_BASE_TAG:=$(shell cd "${MAKE_GADGETS_PATH}" && make get_sanitized_branch_name REPO_DIRECTORY="${REPO_DIRECTORY}")
CATKIN_BASE_IMAGE:=${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG}

CATKIN_BASE_CMAKE_BUILD_PATH:="${CATKIN_BASE_PROJECT}/build"
CATKIN_BASE_CMAKE_INSTALL_PATH:="${CATKIN_BASE_CMAKE_BUILD_PATH}/install"

UID := $(shell id -u)
GID := $(shell id -g)

CATKIN_WORKSPACE_DIRECTORY=catkin_workspace

include ${CATKIN_BASE_MAKEFILE_PATH}/apt_cacher_ng_docker/apt_cacher_ng_docker.mk 
include ${CATKIN_BASE_MAKEFILE_PATH}/adore_if_ros_msg/make_gadgets/docker/docker-tools.mk

#Required for dockerfile-plus plugin e.g., any Dockerfile that has: INCLUDE+ 
DOCKER_BUILDKIT:=1
COMPOSE_DOCKER_CLI_BUILD:=1 

.PHONY: clean_catkin_workspace 
clean_catkin_workspace: # Delete the catkin workspace if it exists
	rm -rf ${CATKIN_BASE_MAKEFILE_PATH}/${CATKIN_WORKSPACE_DIRECTORY}

.PHONY: clean_catkin_base 
clean_catkin_base: ## Clean catkin_base docker context 
	docker rm $$(docker ps -a -q --filter "ancestor=${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG}") --force 2> /dev/null || true
	docker rmi $$(docker images -q ${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG}) --force 2> /dev/null || true
	docker rmi $$(docker images --filter "dangling=true" -q) --force > /dev/null 2>&1 || true

.PHONY: build_catkin 
build_catkin_base: ## Build a docker image with base catkin tools installed
	cd ${APT_CACHER_NG_DOCKER_MAKEFILE_PATH} && make up
	unset CATKIN_BASE_MAKEFILE_PATH && make --file=${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk clean_catkin_base
	cd ${CATKIN_BASE_MAKEFILE_PATH}/docker && \
    docker build \
                 --network host \
                 --build-arg UID=${UID} \
                 --build-arg GID=${GID} \
                 --file Dockerfile.catkin_base \
                 --tag ${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG} .

.PHONY: build_fast_catkin_base
build_fast_catkin_base: # Build the catkin_base docker context if it does not already exist in the docker repository. If it does exist this is a noop.
	@if [ -n "$$(docker images -q ${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG})" ]; then \
		echo "Docker image: ${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG} already build, skipping build."; \
    else \
        unset CATKIN_BASE_MAKEFILE_PATH && make --file=${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk build_catkin_base;\
    fi

.PHONY: create_catkin_workspace_docker
create_catkin_workspace_docker:
	unset CATKIN_BASE_MAKEFILE_PATH && make --file=${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk build_fast_catkin_base
	docker run -it \
               --rm \
               --user "${UID}:${GID}" \
               --mount type=bind,source="${CATKIN_BASE_MAKEFILE_PATH}",target="${CATKIN_BASE_MAKEFILE_PATH}" \
               ${CATKIN_BASE_PROJECT}:${CATKIN_BASE_TAG} \
               'cd "${CATKIN_BASE_MAKEFILE_PATH}" && HOME="${CATKIN_BASE_MAKEFILE_PATH}" CATKIN_WORKSPACE_DIRECTORY="${CATKIN_WORKSPACE_DIRECTORY}" bash "${CATKIN_BASE_MAKEFILE_PATH}/tools/create_catkin_workspace.sh" 2>&1 | tee -a .log/create_catkin_workspace.log'

.PHONY: create_catkin_workspace
create_catkin_workspace: ## Creates a catkin workspace @ adore/catkin_workspace. Can be called within the adore-cli docker context or on the host
	unset CATKIN_BASE_MAKEFILE_PATH && make --file=${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk clean_catkin_workspace 
	@if [ -f "/.dockerenv" ]; then\
        bash ${CATKIN_BASE_MAKEFILE_PATH}/tools/create_catkin_workspace.sh;\
        exit 0;\
    else\
        unset CATKIN_BASE_MAKEFILE_PATH && make --file ${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk create_catkin_workspace_docker;\
        exit 0;\
    fi;

.PHONY: initialize_catkin_workspace
initialize_catkin_workspace: ## Creates a catkin workspace @ adore/catkin_workspace only if there is not already one 
	@if [ -f "${CATKIN_BASE_MAKEFILE_PATH}/${CATKIN_WORKSPACE_DIRECTORY}/.bread_crumb" ]; then\
		printf "Catkin workspace already exists at: %s, skipping creation of catkin workspace.\n " "${CATKIN_BASE_MAKEFILE_PATH}/${CATKIN_WORKSPACE_DIRECTORY}";\
        exit 0;\
    else\
        unset CATKIN_BASE_MAKEFILE_PATH && make --file ${CATKIN_BASE_MAKEFILE_PATH}/catkin_base.mk create_catkin_workspace;\
        touch ${CATKIN_BASE_MAKEFILE_PATH}/${CATKIN_WORKSPACE_DIRECTORY}/.bread_crumb;\
        exit 0;\
    fi;


.PHONY: image_catkin_base
image_catkin_base: ## Returns the current docker image name for catkin base 
	@printf "%s\n" ${CATKIN_BASE_IMAGE}

endif
