digraph "adore::mad::OccupancyCylinderTree"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::mad::OccupancyCylinderTree\n||+ collidesWith()\l+ getPostEncroachmentTime()\l+ getEarliestCollisionTime()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{adore::mad::VectorBasedVolume\lTree\< OccupancyCylinder,\l OccupancyCylinderBoundingFunctor \>\n|- levels_\l- branching_factor_\l- levels_ok_\l|+ VectorBasedVolumeTree()\l+ getLevel()\l+ getLevel()\l+ getOccupancyCount()\l+ getOccupancyCount()\l+ setPreferredBranchingFactor()\l+ insert()\l+ getLevelCount()\l+ remove_all_levels()\l+ compute_all_levels()\l+ recompute_levels()\l+ setLevelCount()\l+ compute_min()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1VectorBasedVolumeTree.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -bound_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::mad::OccupancyCylinder\lBoundingFunctor\n||+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1mad_1_1OccupancyCylinderBoundingFunctor.html",tooltip=" "];
}
