digraph "adore::apps::TestMRMPlanner"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::TestMRMPlanner\n||+ TestMRMPlanner()\l+ ~TestMRMPlanner()\l+ run()\l+ plot()\l+ init_plot()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="test bench implementation for minimum risk maneuver planner"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -headingConstraintLB\l_\n-headingConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::fun::HeadingConstraint\n|- heading_ub_\l- heading_lb_\l- d_\l|+ HeadingConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1HeadingConstraint.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{adore::fun::ANominalConstraint\n||+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ANominalConstraint.html",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -p_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore::params::APLateral\lPlanner\n||+ getWeightPos()\l+ getWeightVel()\l+ getWeightAcc()\l+ getWeightJerk()\l+ getWeightEndPos()\l+ getWeightEndVel()\l+ getWeightEndAcc()\l+ getSlackPos()\l+ getSlackVel()\l+ getSlackAcc()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLateralPlanner.html",tooltip="abstract class containing parameters related to configuring the lateral planner"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -figure_lat1\n-figure_lat2\n-figure_lon1\n-figure_lon2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{DLR_TS::PlotLab::AFigureStub\n||+ ~AFigureStub()\l+ circlestrip()\l+ tristrip()\l+ tristrip()\l+ tristrip()\l+ patch()\l+ patch()\l+ patch()\l+ plot()\l+ plot()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1AFigureStub.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -followCenterlineReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{adore::fun::FollowCenterline\lReference\n|- d_\l- dmax_\l- w_\l- i_grid_\l|+ FollowCenterlineReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowCenterlineReference.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{adore::fun::ANominalReference\n||+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ANominalReference.html",tooltip=" "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -p_veh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{adore::params::APVehicle\n||+ get_vehicle_id()\l+ get_a()\l+ get_b()\l+ get_c()\l+ get_d()\l+ get_m()\l+ get_mu()\l+ get_g()\l+ get_h()\l+ get_cf()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APVehicle.html",tooltip="abstract class for vehicle configuration related paremeters"];
  Node9 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{adore::view::ALane\n||+ isValid()\l+ getSMax()\l+ getSMin()\l+ inSRange()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\l+ getSpeedLimit()\l+ getLeftIndicatorHint()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALane.html",tooltip=" "];
  Node4 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -p_lat_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -planner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{adore::fun::MRMPlanner\l\< K, P \>\n|+ N\l+ R\l- lateralPlanner_\l- jmax_\l- tstall_\l- astall_\l- amin_\l- second_attempt_\l- longitudinal_plan_valid_\l|+ setJMax()\l+ setTStall()\l+ setAStall()\l+ setAMin()\l+ setSecondAttempt()\l+ MRMPlanner()\l+ getInformationSet()\l+ amin_medium_brake_trapezoidal()\l+ t_short_brake_trapezoidal()\l+ t_medium_brake_trapezoidal()\land 12 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1MRMPlanner.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{adore::fun::ANominalPlanner\n||+ compute()\l+ hasValidPlan()\l+ getSetPointRequest()\l+ getCPUTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ANominalPlanner.html",tooltip=" "];
  Node12 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -aptraj_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{adore::params::APTrajectory\lGeneration\n||+ get_rho()\l+ getZDIntegrationLength()\l+ getZDIntegrationStep()\l+ getSetPointCount()\l+ getEmergencyManeuverDelay()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTrajectoryGeneration.html",tooltip="abstract class containing parameters to configure the behaviour of trajectory generation"];
  Node13 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -postproc_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{adore::fun::InformationSet\lPostProcessing\< 4, 2 \>\n|- info_\l|+ getInformationSet()\l+ isLongitudinalPlanValid()\l+ isLateralPlanValid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1InformationSetPostProcessing.html",tooltip=" "];
  Node8 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -apvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -roadCoordinates_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{adore::fun::RoadCoordinate\lConverter\n|- dx_\l- a_\l- b_\l- L_\l- h_\l- g_\l- mu_\l- cf_\l- cr_\l- Iz_m_\l- rho_\l|+ RoadCoordinateConverter()\l+ isValid()\l+ updateParameters()\l+ toRoadCoordinates()\l+ toVehicleState()\l+ toVehicleStateTrajectory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1RoadCoordinateConverter.html",tooltip=" "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -model_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{adore::fun::VLB_OpenLoop\n|- lambda_\l- a_\l- b_\l- L_\l- h_\l- g_\l- mu_\l- cf_\l- cr_\l- Iz_m_\l- delta_max_\l- delta_min_\l- gearState_\l|+ VLB_OpenLoop()\l+ updateParameters()\l+ setReference()\l+ setGearState()\l+ f()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1VLB__OpenLoop.html",tooltip=" "];
  Node9 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -longitudinal_plan_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{adore::mad::LLinearPiecewise\lFunctionM\< double, N+R \>\n|- m_data\l- m_searchIndex\l|+ getData()\l+ getData()\l+ findIndex()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ create_derivative()\l+ bound()\l+ limit_s_to_bounds()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{adore::mad::AScalarToN\l\< double, n \>\n||+ toArray()\l+ toArray()\l+ dimension()\l+ fi()\l+ multiply()\l+ add()\l+ operator*=()\l+ operator+=()\l+ operator-=()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AScalarToN.html",tooltip=" "];
  Node20 -> Node17 [color="grey25",fontsize="10",style="solid",label=" -single_dimensions" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{adore::mad::LLinearPiecewise\lFunctionM\< T, n \>::OneDimension\n|- m_row\l|+ OneDimension()\l+ OneDimension()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ clone()\l+ create_derivative()\l+ bound()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM_1_1OneDimension.html",tooltip=" "];
  Node25 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -x_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{adore::env::VehicleMotion\lState9d\n|+ time_\l+ data_\l|+ getTime()\l+ getX()\l+ getY()\l+ getZ()\l+ getPSI()\l+ getvx()\l+ getvy()\l+ getOmega()\l+ getAx()\l+ getDelta()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1VehicleMotionState9d.html",tooltip="This struct holds the motion state of the vehicle in 9d."];
  Node26 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -xreader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node26 [label="{adore::mad::AReader\l\< adore::env::VehicleMotion\lState9d \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node27 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -followVehicleConstraint_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{adore::fun::FollowPreceding\lVehicle\n|- s_front_t0_\l- v_front_t0_\l- t0_\l|+ FollowPrecedingVehicle()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowPrecedingVehicle.html",tooltip=" "];
  Node3 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -pgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 [label="{adore::params::APTactical\lPlanner\n||+ getGlobalSpeedLimit()\l+ getResetRadius()\l+ getAccLatUB()\l+ getAccLatUB_minVelocity()\l+ getAccLonUB()\l+ getAccLonLB()\l+ getFrontTimeGap()\l+ getRearTimeGap()\l+ getFrontSGap()\l+ getLowerBoundFrontSGapForLF()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTacticalPlanner.html",tooltip="abstract classs containing parameters to configure aspects and constraints of the tactical planner"];
  Node29 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -trafficMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 [label="{adore::env::traffic\l::TrafficMap\n|- borderToParticipant_\l- participantToBorder_\l- trackingIDToParticipant_\l- participantSet_\l|+ getTrafficParticipantSet()\l+ getBorderSet()\l+ getBorderToParticipant()\l+ getParticipantToBorder()\l+ getTrackingIDToParticipant()\l+ TrafficMap()\l+ TrafficMap()\l+ update()\l+ matchBorders()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1traffic_1_1TrafficMap.html",tooltip=" "];
  Node30 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -tpsetReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node30 [label="{adore::mad::AReader\< T \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node31 -> Node29 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node31 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pTacticalPlanner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -envFactory_\n-funFactory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 [label="{adore::env::AFactory\n||+ getBorderWriter()\l+ getBorderFeed()\l+ getBorderTypeChangeProfile\lFeed()\l+ getBorderTypeChangeProfile\lWriter()\l+ getVehicleMotionStateReader()\l+ getTrafficParticipantSet\lReader()\l+ getNavigationGoalReader()\l+ getNavigationDataWriter()\l+ getNavigationDataFeed()\l+ getPrecedenceRuleWriter()\land 37 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1AFactory.html",tooltip="abstract factory for adore::env communication"];
  Node33 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lateralOffsetConstraint\lLFLB_\n-lateralOffsetConstraint\lLFUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node33 [label="{adore::fun::LateralOffset\lConstraintLF\n|- width_\l- hard_safety_distance_\l- soft_safety_distance_\l- min_control_space_\l- delay_s_\l- delay_n_\l- s0_\l- d_\l|+ LateralOffsetConstraintLF()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralOffsetConstraintLF.html",tooltip=" "];
  Node3 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -pv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -plat_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lateralJerkReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{adore::fun::LateralJerkReference\n||+ LateralJerkReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralJerkReference.html",tooltip=" "];
  Node7 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lateralAccelerationReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 [label="{adore::fun::LateralAcceleration\lReference\n||+ LateralAccelerationReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralAccelerationReference.html",tooltip=" "];
  Node7 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 -> Node35 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -plat_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -fig_factory" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 [label="{DLR_TS::PlotLab::FigureStub\lFactory\n|- m_context\l- m_url\l|+ FigureStubFactory()\l+ FigureStubFactory()\l+ createFigureStub()\l+ getDummy()\l+ parseCommandLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1FigureStubFactory.html",tooltip=" "];
  Node37 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -dummy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node37 [label="{DLR_TS::PlotLab::DummyFigure\n||+ ~DummyFigure()\l+ circlestrip()\l+ tristrip()\l+ tristrip()\l+ tristrip()\l+ patch()\l+ patch()\l+ patch()\l+ plot()\l+ plot()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1DummyFigure.html",tooltip=" "];
  Node5 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node38 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -wwriter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node38 [label="{adore::mad::AWriter\l\< adore::fun::SetPointRequest \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node39 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node39 [label="{adore::env::BorderBased\l::LaneFollowingView\n||+ LaneFollowingView()\l+ LaneFollowingView()\l+ getConflictSetPlotData()\l+ update()\l+ getLocalRoadMap()\l+ getBordersToPrint()\l+ getGeometry()\l+ isValid()\l+ getSMax()\l+ getSMin()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LaneFollowingView.html",tooltip="LaneFollowingview provides traffic related information for the current lane."];
  Node9 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node40 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -elt_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node40 [label="{adore::env::traffic\l::EgoLaneTraffic\n|- queue_\l|+ EgoLaneTraffic()\l+ getQueue()\l+ getTrafficMap()\l+ mapVehiclesOnBorders()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1traffic_1_1EgoLaneTraffic.html",tooltip=" "];
  Node29 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -trafficMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -apLFV_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 [label="{adore::params::APLaneFollowingView\n||+ getLookAhead()\l+ getLookBehind()\l+ getPlanningTime()\l+ getBaselineFitSmoothness()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLaneFollowingView.html",tooltip="abstract class containing parameters for a lane following view"];
  Node42 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -lrm_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 [label="{adore::env::BorderBased\l::LocalRoadMap\n|- lanesNearVehicle_\l|+ LocalRoadMap()\l+ getEgoState()\l+ getBorderSet()\l+ getPrecedenceSet()\l+ getVehicleState()\l+ getVehicleParameters()\l+ getBorderTrace()\l+ getMatchedBorder()\l+ getBorderCostMap()\l+ isNavigationActive()\l+ getNavigationCost()\l+ updateEgoState()\l+ update()\l+ getControlledConnectionSet()\l- updateData()\l- discard_radius_based()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LocalRoadMap.html",tooltip=" "];
  Node43 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -borderTrace_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 [label="{adore::env::BorderBased\l::BorderTrace\n|- m_trace\l- m_distance_limit\l- m_length\l|+ BorderTrace()\l+ BorderTrace()\l+ setDistanceLimit()\l+ getDistanceLimit()\l+ insert()\l+ begin()\l+ end()\l+ rbegin()\l+ rend()\l+ clear()\l+ front()\l+ back()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderTrace.html",tooltip=" "];
  Node30 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -vehicleReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -egoState_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -precedenceSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 [label="{adore::env::PrecedenceSet\n|- precedenceRT_\l|+ PrecedenceSet()\l+ PrecedenceSet()\l+ update()\l+ readFile()\l+ parseRule()\l+ insertRule()\l+ init()\l+ contains()\l+ eraseRule()\l+ getRulesInRegion()\l+ getAllRulesIt()\l+ getAllRules()\l+ getRulesOutsideRegion()\l+ refocus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1PrecedenceSet.html",tooltip="PrecedenceSet contains PrecedenceRules, indexed by the area they affect."];
  Node45 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -ruleFeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node45 [label="{adore::mad::AFeed\<\l adore::env::PrecedenceRule \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node31 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -apVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -borderCostMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 [label="{adore::env::BorderBased\l::BorderCostMap\n||+ getRandomBorderIDCostPair()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderCostMap.html",tooltip=" "];
  Node48 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -borderFeed_\n-navigationDataFeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node48 [label="{adore::mad::AFeed\< T \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node49 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -lms_continuation_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node49 [label="{adore::env::BorderBased\l::LMSContinuation\n|- m_lastMatch_initialized\l- m_delayedSwitching\l- m_a\l- m_b\l- m_c\l- m_d\l- m_w\l|+ LMSContinuation()\l+ setDimensions()\l+ getBestMatch()\l+ reset()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LMSContinuation.html",tooltip=" "];
  Node31 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -m_borderSet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node54 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -matchedLane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node54 [label="{adore::env::BorderBased\l::Border\n|+ m_type\l|+ Border()\l+ ~Border()\l+ operator=()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\land 30 more...\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1Border.html",tooltip="The border struct contains data of the smallest."];
  Node55 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -connectionSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node55 [label="{adore::env::ControlledConnectionSet\n|- feeds_\l- max_value_\l|+ ControlledConnectionSet()\l+ ~ControlledConnectionSet()\l+ update()\l+ getConnectionsInRegion()\l+ size()\l+ getAllConnections()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ControlledConnectionSet.html",tooltip=" "];
  Node59 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -apLocalRoadMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node59 [label="{adore::params::APLocalRoadMap\n||+ getDiscardRadius()\l+ isNavigationActive()\l+ getBorderTraceLength()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLocalRoadMap.html",tooltip="abstract class to configure the local view of the road map"];
  Node60 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -lms_navigation_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node60 [label="{adore::env::BorderBased\l::LMSNavigation\n|- m_lastMatch_initialized\l|+ LMSNavigation()\l+ getBestMatch()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LMSNavigation.html",tooltip=" "];
  Node31 -> Node60 [color="grey25",fontsize="10",style="solid",label=" -m_borderSet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 -> Node60 [color="grey25",fontsize="10",style="solid",label=" -m_borderID2Cost" ,arrowhead="odiamond",fontname="Helvetica"];
  Node49 -> Node60 [color="grey25",fontsize="10",style="solid",label=" -m_continuationStrategy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node61 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -cs_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node61 [label="{adore::env::BorderBased\l::ConflictSet\n|- ca_\l- corner_points_vec\l- overlap_sets\l- overlapping_borders\l- right_borders_of_conf\l_lanes\l- valid_\l|+ ConflictSet()\l+ getConflictAreas()\l+ isValid()\l+ update()\l+ assembleConflictZones()\l+ mapParticipantsToConflict\lZones()\l+ getCornerPoints()\l+ getOverlapSet()\l+ get_right_borders_of\l_conf_lanes()\l+ getBordersToPrint()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1ConflictSet.html",tooltip=" "];
  Node62 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node62 [label="{adore::view::ConflictSet\n||+ isValid()\l+ getConflictAreas()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ConflictSet.html",tooltip=" "];
  Node63 -> Node61 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node63 [label="{adore::env::BorderBased\l::LaneFollowingGeometry\l\< 20, 200 \>\n|+ m_velocity_fct\l+ m_leftBorder_fct\l+ m_rightBorder_fct\l+ m_centerRaw_fct\l+ m_centerSmoothed_fct\l+ m_centerSmoothedDerivative1_fct\l+ m_centerSmoothedDerivative2_fct\l+ m_centerNormal_fct\l+ m_centerHeading_fct\l+ m_centerSmoothedCurvature_fct\land 28 more...\l|+ LaneFollowingGeometry()\l+ update()\l+ computeNavigationCost()\l+ excludeObstaclePoint()\l+ getRightBorders()\l+ getLeftBorders()\l+ getBestMatchingBorder()\l+ isValid()\l+ getViewingDistance()\l+ getSMax()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LaneFollowingGeometry.html",tooltip=" "];
  Node63 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -roadmap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node64 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -paramsFactory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node64 [label="{adore::params::AFactory\n||+ getVehicle()\l+ getTrajectoryGeneration()\l+ getTrajectoryTracking()\l+ getTacticalPlanner()\l+ getMapProvider()\l+ getTrafficLightSim()\l+ getNavigation()\l+ getCooperation()\l+ getEmergencyOperation()\l+ getFunctionmanagement()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1AFactory.html",tooltip="abstract factory for adore::params classes"];
}
