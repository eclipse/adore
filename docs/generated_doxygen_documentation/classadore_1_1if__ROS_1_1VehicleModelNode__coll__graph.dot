digraph "adore::if_ROS::VehicleModelNode"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::if_ROS::VehicleModelNode\n||+ VehicleModelNode()\l+ init()\l+ setAutomaticControl()\l+ setCheckpointClearance()\l+ setSupressInput()\l+ setIndicatorLeftOn()\l+ setIndicatorRightOn()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{adore::if_ROS::FactoryCollection\n|- nh_\l|+ FactoryCollection()\l+ init()\l+ getFactory()\l+ getParamsFactory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1if__ROS_1_1FactoryCollection.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{adore_if_ros_scheduling\l::Baseapp\n|- timers_\l- useScheduler_\l- rate_\l- m_pN\l|+ Baseapp()\l+ init()\l+ initSim()\l+ resume()\l+ pause()\l+ run()\l+ addTimerCallback()\l+ getParam()\l+ getParam()\l+ schedulerCallback()\l+ getRosNodeHandle()\l+ func()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore__if__ros__scheduling_1_1Baseapp.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -snm_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore_if_ros_scheduling\l::SchedulerNotificationManager\n|- m_pN\l- m_notificationWriter\l- m_clientNameWriter\l|+ SchedulerNotificationManager()\l+ publishClientName()\l+ registerAtScheduler()\l+ notifyScheduler()\l+ pause()\l+ resume()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore__if__ros__scheduling_1_1SchedulerNotificationManager.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{adore_scheduling::AScheduler\lNotificationManager\n|# m_duration\l# m_pause\l|+ ASchedulerNotificationManager()\l+ publishClientName()\l+ registerAtScheduler()\l+ notifyScheduler()\l+ pause()\l+ resume()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore__scheduling_1_1ASchedulerNotificationManager.html",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #m_sn" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{adore_scheduling::Scheduler\lNotification\n|- m_identifier\l- m_upperTimeLimitSec\l- m_upperTimeLimitNsec\l|+ SchedulerNotification()\l+ SchedulerNotification()\l+ getUpperTimeLimitSec()\l+ getUpperTimeLimitNsec()\l+ getUpperTimeLimitPair()\l+ setUpperTimeLimit()\l+ setZero()\l+ getID()\l+ setID()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore__scheduling_1_1SchedulerNotification.html",tooltip=" "];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_schedulerNotification\lConversion" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{adore_if_ros_scheduling\l::SchedulerNotificationConversion\n||+ operator()()\l+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore__if__ros__scheduling_1_1SchedulerNotificationConversion.html",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +vm_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{adore::apps::VehicleModel\n|# simulationID_\l# v2xStationID_\l- last_time_\l- integration_step_\l- last_time_checkpoint\l_clearance_\l- last_time_valid_\l- automatic_control_\l- checkpoint_clearance_\l- supress_input_\l- indicator_left_off\l_from_\l- indicator_right_off\l_from_\l- x_\l|+ VehicleModel()\l+ setAutomaticControl()\l+ setCheckpointClearance()\l+ setSupressInput()\l+ setIndicatorRightOn()\l+ setIndicatorLeftOn()\l+ run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1apps_1_1VehicleModel.html",tooltip="a vehicle model which can be used in simulations"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -extended_state_output_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{adore::mad::AWriter\l\< adore::fun::VehicleExtended\lState \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -u_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{adore::fun::MotionCommand\n|- steeringAngle_\l- acceleration_\l|+ MotionCommand()\l+ getSteeringAngle()\l+ setSteeringAngle()\l+ getAcceleration()\l+ setAcceleration()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1MotionCommand.html",tooltip=" "];
  Node11 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -solver_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{adore::mad::OdeRK4\l\< double \>\n||+ OdeRK4()\l+ ~OdeRK4()\l+ solve()\l+ solve_with_output()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1OdeRK4.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{adore::mad::AOdeSolver\< T \>\n||+ AOdeSolver()\l+ ~AOdeSolver()\l+ solve()\l+ solve_with_output()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AOdeSolver.html",tooltip=" "];
  Node13 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -params_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{adore::params::APVehicle\n||+ get_vehicle_id()\l+ get_a()\l+ get_b()\l+ get_c()\l+ get_d()\l+ get_m()\l+ get_mu()\l+ get_g()\l+ get_h()\l+ get_cf()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APVehicle.html",tooltip="abstract class for vehicle configuration related paremeters"];
  Node14 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -participant_writer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{adore::mad::AWriter\< T \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node15 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -gps_output_\n-odom_output_\n-sim_output_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{adore::mad::AWriter\l\< adore::env::VehicleMotion\lState9d \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node16 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -indicatorCommand_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{adore::fun::IndicatorCommand\n|- indicatorLeftOn_\l- indicatorRightOn_\l|+ IndicatorCommand()\l+ getIndicatorLeftOn()\l+ setIndicatorLeftOn()\l+ getIndicatorRightOn()\l+ setIndicatorRightOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1fun_1_1IndicatorCommand.html",tooltip=" "];
  Node17 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -timer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{adore::mad::AReader\l\< double \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node18 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -reset_twist_feed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{adore::mad::AFeed\<\l adore::sim::ResetVehicleTwist \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node19 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -reset_pose_feed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{adore::mad::AFeed\<\l adore::sim::ResetVehiclePose \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node20 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -indstateReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{adore::mad::AReader\l\< adore::fun::IndicatorCommand \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node21 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -control_input_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{adore::mad::AReader\l\< adore::fun::MotionCommand \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
}
