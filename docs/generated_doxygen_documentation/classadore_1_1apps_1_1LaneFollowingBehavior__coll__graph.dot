digraph "adore::apps::LaneFollowingBehavior"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::LaneFollowing\lBehavior\n||+ ~LaneFollowingBehavior()\l+ LaneFollowingBehavior()\l+ run()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Decision making and maneuver planning, which realizes lane following only. Basically a wrapper for tr..."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pTrajectoryGeneration_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::params::APTrajectory\lGeneration\n||+ get_rho()\l+ getZDIntegrationLength()\l+ getZDIntegrationStep()\l+ getSetPointCount()\l+ getEmergencyManeuverDelay()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTrajectoryGeneration.html",tooltip="abstract class containing parameters to configure the behaviour of trajectory generation"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -trajectory_planner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::apps::TrajectoryPlannerLF\n|- id_\l- plannerName_\l- lateral_i_grid_\l- const_penalty_\l|+ ~TrajectoryPlannerLF()\l+ TrajectoryPlannerLF()\l+ setConstPenalty()\l+ setSpeedScale()\l+ addConstraint()\l+ setStopPoint()\l+ computeTrajectory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1apps_1_1TrajectoryPlannerLF.html",tooltip="Decoupled trajectory planner, which uses TrajectoryPlannerBase to compute and provide a PlanningResul..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{adore::apps::TrajectoryPlannerBase\n||+ ~TrajectoryPlannerBase()\l+ TrajectoryPlannerBase()\l+ prime()\l+ planning_request_handler()\l+ computeTrajectory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1apps_1_1TrajectoryPlannerBase.html",tooltip="Base class for different trajectory planners: Handles communication w/ decision making module...."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -request_listener_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{adore::mad::AFeedWithCallback\l\< adore::fun::PlanningRequest \>\n||+ hasNext()\l+ setCallback()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeedWithCallback.html",tooltip=" "];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -result_writer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{adore::mad::AWriter\l\< adore::fun::PlanningResult \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -ttcCost_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{adore::fun::SPRTTCNominal\n||+ SPRTTCNominal()\l+ getName()\l+ getCost()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SPRTTCNominal.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{adore::fun::ASPRCost\n||+ getCost()\l+ getName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ASPRCost.html",tooltip=" "];
  Node9 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{adore::params::APVehicle\n||+ get_vehicle_id()\l+ get_a()\l+ get_b()\l+ get_c()\l+ get_d()\l+ get_m()\l+ get_mu()\l+ get_g()\l+ get_h()\l+ get_cf()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APVehicle.html",tooltip="abstract class for vehicle configuration related paremeters"];
  Node10 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -predictionView_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{adore::view::ATrafficPredictionView\n||+ overlapsExpectedBehavior()\l+ overlapsEmergencyBehavior()\l+ getExpectedCollisionTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ATrafficPredictionView.html",tooltip=" "];
  Node2 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -pTrajectoryGeneration_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -ppred_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{adore::params::APPrediction\n||+ get_roadbased_prediction\l_duration()\l+ get_roadbased_expected\l_acc_ub()\l+ get_roadbased_expected\l_acc_ub_delay()\l+ get_roadbased_expected\l_acc_lb()\l+ get_roadbased_expected\l_vel_ub()\l+ get_roadbased_worstcase\l_acc_ub()\l+ get_roadbased_worstcase\l_acc_ub_delay()\l+ get_roadbased_worstcase\l_acc_lb()\l+ get_roadbased_worstcase\l_vel_ub()\l+ get_roadbased_heading\l_deviation_ub()\land 25 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APPrediction.html",tooltip="parameter interface for parameters related to prediction"];
  Node12 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -collision_detection_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{adore::fun::SPRInvariant\lCollisionFreedom\n||+ SPRInvariantCollisionFreedom()\l+ isValid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SPRInvariantCollisionFreedom.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{adore::fun::ASPRConstraint\n||+ isValid()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ASPRConstraint.html",tooltip=" "];
  Node11 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -ppred_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{adore::params::APTactical\lPlanner\n||+ getGlobalSpeedLimit()\l+ getResetRadius()\l+ getAccLatUB()\l+ getAccLatUB_minVelocity()\l+ getAccLonUB()\l+ getAccLonLB()\l+ getFrontTimeGap()\l+ getRearTimeGap()\l+ getFrontSGap()\l+ getLowerBoundFrontSGapForLF()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTacticalPlanner.html",tooltip="abstract classs containing parameters to configure aspects and constraints of the tactical planner"];
  Node10 -> Node12 [color="grey25",fontsize="10",style="solid",label=" -predictionView_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -pEmergencyOperation_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{adore::params::APEmergency\lOperation\n||+ getKy()\l+ getKpsi()\l+ getamin()\l+ getamax()\l+ getDeltaMax()\l+ getDeltaMin()\l+ getEmergencyManeuverAMin()\l+ getEmergencyManeuverAMax()\l+ getEmergencyManeuverAStall()\l+ getEmergencyManeuverTStall()\l+ getEmergencyManeuverJMin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APEmergencyOperation.html",tooltip="abstract class containing parameters concerning emergency operation behaviour"];
  Node9 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -checkPointsOnLane\l_\n-connectionsOnLane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{adore::env::ConnectionsOnLane\n|- mappedcons_\l|+ hasLimitLine()\l+ getLimitLine()\l+ ConnectionsOnLane()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ConnectionsOnLane.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{adore::view::ALimitLineEn\lRoute\n||+ hasLimitLine()\l+ getLimitLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALimitLineEnRoute.html",tooltip=" "];
  Node18 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{adore::view::ALane\n||+ isValid()\l+ getSMax()\l+ getSMin()\l+ inSRange()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\l+ getSpeedLimit()\l+ getLeftIndicatorHint()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALane.html",tooltip=" "];
  Node19 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -conset_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{adore::env::ControlledConnectionSet\n|- feeds_\l- max_value_\l|+ ControlledConnectionSet()\l+ ~ControlledConnectionSet()\l+ update()\l+ getConnectionsInRegion()\l+ size()\l+ getAllConnections()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ControlledConnectionSet.html",tooltip=" "];
  Node14 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -pTacticalPlanner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -nominal_planner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{adore::fun::BasicLaneFollowing\lPlanner\< K, P \>\n||+ BasicLaneFollowingPlanner()\l+ addConstraint()\l+ addReference()\l+ setSpeedScale()\l+ setConflictSet()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1BasicLaneFollowingPlanner.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node24 [label="{adore::fun::DecoupledLFLCPlanner\l\< K, P \>\n|+ N\l+ R\l- progress_solver_\l- offset_solver_\l- s0\l- ds0\l- dds0\l- n0\l- dn0\l- ddn0\l- psi0\l- omega0\l- t0\l- T_\l- T_end_\l- valid_\l- step_\l|+ DecoupledLFLCPlanner()\l+ setPlanningHorizon()\l+ getPlanningHorizon()\l+ getInformationSet()\l+ getProgressSolver()\l+ getOffsetSolver()\l+ getRoadCoordinateConverter()\l+ getStatus()\l+ compute()\l+ hasValidPlan()\l+ getSetPointRequest()\l+ getCPUTime()\l- init_progress_default\l_cost()\l- init_offset_default\l_cost()\l- initialize()\l- prepare_progress_computation()\l- prepare_offset_computation()\l- update_guard()\l- update_progress_parameters()\l- update_offset_parameters()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1DecoupledLFLCPlanner.html",tooltip=" "];
  Node2 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -aptraj_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -apvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 -> Node24 [color="grey25",fontsize="10",style="solid",label=" -spr_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 [label="{adore::fun::SetPointRequest\n|+ setPoints\l+ setPointRequestID\l|+ SetPointRequest()\l+ ~SetPointRequest()\l+ push_back()\l+ append()\l+ setStartTime()\l+ getDuration()\l+ interpolateReference()\l+ interpolateSetPoint()\l+ relocate()\l+ relocateTo()\land 13 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SetPointRequest.html",tooltip=" "];
  Node34 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -headingConstraintLB\l_\n-headingConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{adore::fun::HeadingConstraint\n|- heading_ub_\l- heading_lb_\l- d_\l|+ HeadingConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1HeadingConstraint.html",tooltip=" "];
  Node36 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -followCenterlineReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 [label="{adore::fun::FollowCenterline\lReference\n|- d_\l- dmax_\l- w_\l- i_grid_\l|+ FollowCenterlineReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowCenterlineReference.html",tooltip=" "];
  Node9 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -p_veh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node38 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -curvatureSpeedLimit_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node38 [label="{adore::fun::CurvatureSpeed\lLimitPredict\n|- sstep_\l- smax_\l- s_curvature_lookahead_\l- a\l|+ CurvatureSpeedLimitPredict()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1CurvatureSpeedLimitPredict.html",tooltip=" "];
  Node40 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -lowerBoundSGapToPreceding\lVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node40 [label="{adore::fun::LowerBoundSGap\lToPrecedingVehicle\n|- s_front_t0_\l- v_front_t0_\l- t0_\l- amin_\l|+ LowerBoundSGapToPreceding\lVehicle()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LowerBoundSGapToPrecedingVehicle.html",tooltip=" "];
  Node2 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -pgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node40 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -dontDriveBackwards_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 [label="{adore::fun::DontDriveBackwards\n||+ DontDriveBackwards()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1DontDriveBackwards.html",tooltip=" "];
  Node42 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -lateralOffsetConstraint\lLFLB_\n-lateralOffsetConstraint\lLFUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 [label="{adore::fun::LateralOffset\lConstraintLF\n|- width_\l- hard_safety_distance_\l- soft_safety_distance_\l- min_control_space_\l- delay_s_\l- delay_n_\l- s0_\l- d_\l|+ LateralOffsetConstraintLF()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralOffsetConstraintLF.html",tooltip=" "];
  Node9 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -pv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -lateralJerkReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 [label="{adore::fun::LateralJerkReference\n||+ LateralJerkReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralJerkReference.html",tooltip=" "];
  Node18 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -stopAtNextGoalPoint_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 [label="{adore::fun::StopAtNextGoal\lPoint\n|- s_max_\l|+ StopAtNextGoalPoint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1StopAtNextGoalPoint.html",tooltip=" "];
  Node2 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -pgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -lateralAccelerationReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 [label="{adore::fun::LateralAcceleration\lReference\n||+ LateralAccelerationReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralAccelerationReference.html",tooltip=" "];
  Node18 -> Node46 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node47 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -longitudinalAcceleration\lConstraintLB_\n-longitudinalAccelerationConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node47 [label="{adore::fun::Longitudinal\lAccelerationConstraint\n|- ax_ub_\l- ax_lb_\l- ax_ub_slow_\l- v_ax_ub_slow_\l- ds0_\l- t0_\l- d_\l|+ LongitudinalAcceleration\lConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LongitudinalAccelerationConstraint.html",tooltip=" "];
  Node48 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -stopAtCheckPoint_\n-stopAtRedLight_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node48 [label="{adore::fun::AdhereToNext\lLimitLine\n|- s_max_\l- drivable_states_\l- clearance_states_\l|+ AdhereToNextLimitLine()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1AdhereToNextLimitLine.html",tooltip=" "];
  Node2 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -pgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node48 [color="grey25",fontsize="10",style="solid",label=" -nextLL_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node49 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -followPrecedingVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node49 [label="{adore::fun::FollowPreceding\lVehicle_BreakingCurve\n|- s_front_t0_\l- v_front_t0_\l- t0_\l- amin_\l|+ FollowPrecedingVehicle\l_BreakingCurve()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowPrecedingVehicle__BreakingCurve.html",tooltip=" "];
  Node2 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -pgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node49 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node59 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -prediction_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node59 [label="{adore::env::DecoupledTraffic\lPredictionView\n|- expected_predictions_\l- emergency_predictions_\l- static_obstacles_\l|+ DecoupledTrafficPrediction\lView()\l+ update()\l+ overlapsExpectedBehavior()\l+ overlapsEmergencyBehavior()\l+ getExpectedCollisionTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1DecoupledTrafficPredictionView.html",tooltip=" "];
  Node10 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node60 -> Node59 [color="grey25",fontsize="10",style="solid",label=" -emergencyReader_\n-expectedReader_\n-staticObstaclesReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node60 [label="{adore::mad::AReader\< T \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node61 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -ngo_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node61 [label="{adore::env::NavigationGoal\lObserver\n|- initialized_\l- inview_\l- oncurrentlane_\l- onlaneleft_\l- onlaneright_\l- s_\l- n_\l|+ NavigationGoalObserver()\l+ update()\l+ isNextGoalPointFinal()\l+ isNextGoalPointInView()\l+ isNextGoalPointOnCurrent\lLane()\l+ isNextGoalPointOnLaneToThe\lLeft()\l+ isNextGoalPointOnLaneToThe\lRight()\l+ getProgress()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1NavigationGoalObserver.html",tooltip=" "];
  Node60 -> Node61 [color="grey25",fontsize="10",style="solid",label=" -goalReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node61 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node66 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -conflicts_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node66 [label="{adore::env::DecoupledConflict\lPointView\n|- conflict_set_\l|+ DecoupledConflictPointView()\l+ update()\l+ size()\l+ getPoint()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1DecoupledConflictPointView.html",tooltip=" "];
  Node60 -> Node66 [color="grey25",fontsize="10",style="solid",label=" -conflict_set_reader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 -> Node66 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node67 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -coercion_detection_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node67 [label="{adore::fun::SPRNonCoercive\n||+ SPRNonCoercive()\l+ isValid()\l+ getName()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SPRNonCoercive.html",tooltip=" "];
  Node13 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 -> Node67 [color="grey25",fontsize="10",style="solid",label=" -ppred_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node67 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node67 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node67 [color="grey25",fontsize="10",style="solid",label=" -predictionView_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node68 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -checkPointSet_\n-connectionSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node68 [label="{adore::env::ControlledConnection\lSet4Ego\n||+ ControlledConnectionSet4\lEgo()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ControlledConnectionSet4Ego.html",tooltip="Specialization of ControlledConnectionSet: Filters connections in range of ego."];
  Node19 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node60 -> Node68 [color="grey25",fontsize="10",style="solid",label=" -xreader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node69 -> Node68 [color="grey25",fontsize="10",style="solid",label=" -x_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node69 [label="{adore::env::VehicleMotion\lState9d\n|+ time_\l+ data_\l|+ getTime()\l+ getX()\l+ getY()\l+ getZ()\l+ getPSI()\l+ getvx()\l+ getvy()\l+ getOmega()\l+ getAx()\l+ getDelta()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1VehicleMotionState9d.html",tooltip="This struct holds the motion state of the vehicle in 9d."];
  Node70 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #three_lanes_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node70 [label="{adore::env::ThreeLaneView\lDecoupled\n|- participantSet_\l- monitor_traffic_\l|+ ThreeLaneViewDecoupled()\l+ ~ThreeLaneViewDecoupled()\l+ update()\l+ getCurrentLane()\l+ getLeftLaneChange()\l+ getRightLaneChange()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ThreeLaneViewDecoupled.html",tooltip=" "];
  Node60 -> Node70 [color="grey25",fontsize="10",style="solid",label=" -tpsetReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node89 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -emergency_planner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node89 [label="{adore::fun::BasicMRMPlanner\l\< K, P \>\n||+ BasicMRMPlanner()\l+ addConstraint()\l+ addReference()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1BasicMRMPlanner.html",tooltip="Plans minimum risk maneuvers on given lane. K number of control points for planning...."];
  Node34 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -headingConstraintLB\l_\n-headingConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -followCenterlineReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -lateralOffsetConstraint\lLFLB_\n-lateralOffsetConstraint\lLFUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -lateralJerkReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 -> Node89 [color="grey25",fontsize="10",style="solid",label=" -lateralAccelerationReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node93 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -reqwriter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node93 [label="{adore::mad::AWriter\l\< adore::fun::PlanningRequest \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -prwriter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node94 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -dispatcher_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node94 [label="{adore::fun::SetPointRequest\lDispatcher\n|- reset_\l- has_vehicle_state_\l- status_msg_\l|+ SetPointRequestDispatcher()\l+ ~SetPointRequestDispatcher()\l+ getInitialState()\l+ dispatch()\l+ getStatus()\l- computeResetCondition()\l- computePlanStartPoint()\l- update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SetPointRequestDispatcher.html",tooltip="class helps to dispatch SetPointRequest to controller SetPointRequestDispatcher handles selection of ..."];
  Node60 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -localization_state\l_reader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node69 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -x0_localization_\n-x0_odometry_\n-x_localization_\n-x_odometry_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node95 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -localization_buffer\l_\n-odometry_buffer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node95 [label="{adore::fun::VehicleMotion\lStateBuffer\n|- buffer_\l- dt_max_\l|+ VehicleMotionStateBuffer()\l+ ~VehicleMotionStateBuffer()\l+ update()\l+ size()\l+ getTmax()\l+ interpolate_or_latest()\l+ interpolate()\l- interp()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1VehicleMotionStateBuffer.html",tooltip="Buffers and interpolates vehicle positions."];
  Node9 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node96 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -nominal_trajectory\l_writer_\n-setpointrequest\l_localization_writer\l_\n-setpointrequest\l_odometry_writer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node96 [label="{adore::mad::AWriter\< T \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node14 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -spr_localization_\n-spr_odom_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node97 -> Node94 [color="grey25",fontsize="10",style="solid",label=" -activation_observer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node97 [label="{adore::fun::ActivationState\lObserver\n||+ ActivationStateObserver()\l+ ~ActivationStateObserver()\l+ isAutomaticControlEnabled()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ActivationStateObserver.html",tooltip=" "];
  Node60 -> Node97 [color="grey25",fontsize="10",style="solid",label=" -vehicle_extended_state\l_reader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node98 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -request_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node98 [label="{adore::fun::PlanningRequest\n|+ iteration\l+ t_planning_start\l+ t_planning_end\l+ t_emergency_start\l|+ PlanningRequest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1fun_1_1PlanningRequest.html",tooltip=" "];
  Node99 -> Node98 [color="grey25",fontsize="10",style="solid",label=" +initial_state" ,arrowhead="odiamond",fontname="Helvetica"];
  Node99 [label="{adore::fun::SetPoint\n|+ tStart\l+ tEnd\l+ maneuverID\l|+ SetPoint()\l+ ~SetPoint()\l+ toMotionState()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SetPoint.html",tooltip=" "];
}
