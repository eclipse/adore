digraph "adore::apps::CollisionMonitor"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::CollisionMonitor\n|- participants_\l- egoID_\l|+ CollisionMonitor()\l+ run()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A class, which monitors for collisions between ego and other objects."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -proposition_writer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::mad::AWriter\< T \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -participant_feed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::mad::AFeed\<\l adore::env::traffic\l::Participant \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
}
