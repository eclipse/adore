digraph "adore::if_ROS::TrafficSimulationFeed"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::if_ROS::TrafficSimulationFeed\n|- data_\l- single_subscriber_\l- multi_subscriber_\l|+ TrafficSimulationFeed()\l+ hasNext()\l+ getNext()\l+ getLatest()\l- receive_single()\l- receive_multi()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{adore::mad::AFeed\<\l adore::env::traffic\l::Participant \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -converter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::if_ROS::TPSimulation\lConverter\n||+ operator()()\l+ operator()()\l+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1if__ROS_1_1TPSimulationConverter.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{adore::if_ROS::TrafficParticipant\lConverter\n||+ decodeTrafficParticipant\lDetection()\l+ encodeTrafficParticipant\lDetection()\l+ decodeTrafficParticipant()\l+ encodeTrafficParticipant()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1if__ROS_1_1TrafficParticipantConverter.html",tooltip=" "];
}
