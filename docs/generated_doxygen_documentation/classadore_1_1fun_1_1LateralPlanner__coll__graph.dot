digraph "adore::fun::LateralPlanner&lt; K, P &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::fun::LateralPlanner\l\< K, P \>\n|+ N\l+ R\l- offset_solver_\l- n0_\l- dn0_\l- ddn0_\l- T_\l- T_end_\l- valid_\l|+ LateralPlanner()\l+ setPlanningHorizon()\l+ getInformationSet()\l+ getOffsetSolver()\l+ getRoadCoordinateConverter()\l+ compute()\l+ getLateralPlan()\l+ getTend()\l+ hasValidPlan()\l+ getSetPointRequest()\l+ getCPUTime()\l- init_offset_default\l_cost()\l- initialize()\l- prepare_offset_computation()\l- update_guard()\l- update_offset_parameters()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -aptraj_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::params::APTrajectory\lGeneration\n||+ get_rho()\l+ getZDIntegrationLength()\l+ getZDIntegrationStep()\l+ getSetPointCount()\l+ getEmergencyManeuverDelay()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTrajectoryGeneration.html",tooltip="abstract class containing parameters to configure the behaviour of trajectory generation"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -apvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::params::APVehicle\n||+ get_vehicle_id()\l+ get_a()\l+ get_b()\l+ get_c()\l+ get_d()\l+ get_m()\l+ get_mu()\l+ get_g()\l+ get_h()\l+ get_cf()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APVehicle.html",tooltip="abstract class for vehicle configuration related paremeters"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -roadCoordinates_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore::fun::RoadCoordinate\lConverter\n|- dx_\l- a_\l- b_\l- L_\l- h_\l- g_\l- mu_\l- cf_\l- cr_\l- Iz_m_\l- rho_\l|+ RoadCoordinateConverter()\l+ isValid()\l+ updateParameters()\l+ toRoadCoordinates()\l+ toVehicleState()\l+ toVehicleStateTrajectory()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1RoadCoordinateConverter.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -model_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{adore::fun::VLB_OpenLoop\n|- lambda_\l- a_\l- b_\l- L_\l- h_\l- g_\l- mu_\l- cf_\l- cr_\l- Iz_m_\l- delta_max_\l- delta_min_\l- gearState_\l|+ VLB_OpenLoop()\l+ updateParameters()\l+ setReference()\l+ setGearState()\l+ f()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1VLB__OpenLoop.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{adore::mad::AOdeModel\l\< double \>\n||+ AOdeModel()\l+ ~AOdeModel()\l+ f()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AOdeModel.html",tooltip=" "];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{adore::view::ALane\n||+ isValid()\l+ getSMax()\l+ getSMin()\l+ inSRange()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\l+ getSpeedLimit()\l+ getLeftIndicatorHint()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALane.html",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -spr_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{adore::fun::SetPointRequest\n|+ setPoints\l+ setPointRequestID\l|+ SetPointRequest()\l+ ~SetPointRequest()\l+ push_back()\l+ append()\l+ setStartTime()\l+ getDuration()\l+ interpolateReference()\l+ interpolateSetPoint()\l+ relocate()\l+ relocateTo()\land 13 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1SetPointRequest.html",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -aplat_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{adore::params::APLateral\lPlanner\n||+ getWeightPos()\l+ getWeightVel()\l+ getWeightAcc()\l+ getWeightJerk()\l+ getWeightEndPos()\l+ getWeightEndVel()\l+ getWeightEndAcc()\l+ getSlackPos()\l+ getSlackVel()\l+ getSlackAcc()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLateralPlanner.html",tooltip="abstract class containing parameters related to configuring the lateral planner"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #info_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{adore::fun::NominalPlanner\lInformationSet\< N+1, 2 \>\n|- bound_\l- ref_\l- subsets_\l- unbound_\l|+ NominalPlannerInformation\lSet()\l+ add()\l+ add()\l+ add()\l+ remove()\l+ remove()\l+ remove()\l+ getReferenceIfAvailable()\l+ getUB()\l+ getLB()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1NominalPlannerInformationSet.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{adore::fun::ANominalPlanner\lInformation\n||+ getReferenceIfAvailable()\l+ getUB()\l+ getLB()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ANominalPlannerInformation.html",tooltip=" "];
}
