digraph "adore::env::BorderBased::LaneChangeBorders"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::env::BorderBased\l::LaneChangeBorders\n|+ gate_target_borders_\l+ gate_source_borders_\l+ downstream_borders_\l+ upstream_borders_\l- lc_direction_left_\l- lookahead_\l- lookbehind_\l- progress_in_gate_\l- remaining_in_gate_\l- downstream_length_\l- distance_to_current_\l- valid_\l- continueOnIncreasingCost_\l|+ LaneChangeBorders()\l+ isLCDirectionLeft()\l+ isValid()\l+ getProgressInGate()\l+ getRemainingInGate()\l+ getDownstreamLength()\l+ getDistanceToCurrent()\l+ getLookAhead()\l+ setLookAhead()\l+ getLookBehind()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Selects Borders from BorderSet required for LaneChangeView construction."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -borderCostMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::env::BorderBased\l::BorderCostMap\n||+ getRandomBorderIDCostPair()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderCostMap.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{std::unordered_map\l\< BorderID, adore::env\l::NavigationCost, adore\l::env::BorderBased::BorderIDHasher \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
