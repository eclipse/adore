digraph "adore::if_ROS::params::POdometryModel"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::if_ROS::params\l::POdometryModel\n||+ POdometryModel()\l+ get_k_e_vx()\l+ get_k_e_vy()\l+ get_k_e_omega()\l+ get_k_e_ax()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{adore::params::APOdometry\lModel\n||+ get_k_e_vx()\l+ get_k_e_vy()\l+ get_k_e_omega()\l+ get_k_e_ax()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APOdometryModel.html",tooltip="abstract class containing parameters which configure odometry state estimation model"];
  Node3 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{adore::if_ROS::ROSParam\n|# prefix_\l# n_\l|+ get()\l# ROSParam()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1if__ROS_1_1ROSParam.html",tooltip=" "];
}
