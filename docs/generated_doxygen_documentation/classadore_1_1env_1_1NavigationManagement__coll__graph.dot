digraph "adore::env::NavigationManagement"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::env::NavigationManagement\n|- m_maxCost\l- m_goalChanged\l- m_laneChangePenalty\l- m_borderCosts\l|+ NavigationManagement()\l+ setLaneChangePenalty()\l+ addFeed()\l+ getMaxCost()\l+ hasMap()\l+ init()\l+ update()\l+ goalChanged()\l+ reset()\l+ clear()\l+ setDestination()\l+ run()\l+ getBorderCost()\l+ getBorder()\l+ getGlobalMap()\l- getBorderFromCurrentTarget()\l- setMaxCost()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_destination" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::env::BorderBased\l::Coordinate\n|+ m_X\l+ m_Y\l+ m_Z\l|+ Coordinate()\l+ Coordinate()\l+ Coordinate()\l+ Coordinate()\l+ translate()\l+ rotate()\l+ discretize()\l+ distance()\l+ isNear()\l+ operator==()\land 8 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1Coordinate.html",tooltip="This struct represents 3-dimensional coordines."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_navBorderObserver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::env::BorderBased\l::NavigationBorderObserver\n|- m_changedBordersDuringLast\lUpdate\l- m_finishedUpdating\l|+ NavigationBorderObserver()\l+ init()\l+ update()\l+ navigationReplanningNecessary()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1NavigationBorderObserver.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{adore::env::BorderBased\l::BorderObserver\n||+ BorderObserver()\l+ update()\l+ discard_radius_based()\l+ addFeed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderObserver.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{adore::mad::ALocalObserver\l\< Border \>\n|# feed_\l|+ update()\l+ discard_radius_based()\l+ addFeed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1ALocalObserver.html",tooltip=" "];
  Node6 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_map" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{adore::env::MapBorderManagement\n|- m_updateQueue\l|+ MapBorderManagement()\l+ getSuccessors()\l+ getBordersAtPoint()\l+ init()\l+ getBorder()\l+ clearLocalMap()\l+ reset()\l+ getGlobalMap()\l+ deleteBordersInRegion()\l+ addBordersInRegion()\land 6 more...\l- initGlobalSet()\l- initBaseSet()\l- do_run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1MapBorderManagement.html",tooltip="Automatically manage local map and necessary updates based on vehicle position and last state of obje..."];
  Node6 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -m_baseSet\n-m_globalSet\n-m_localSet" ,arrowhead="odiamond",fontname="Helvetica"];
}
