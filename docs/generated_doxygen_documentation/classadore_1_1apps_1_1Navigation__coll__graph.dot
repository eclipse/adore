digraph "adore::apps::Navigation"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::Navigation\n||+ Navigation()\l+ run()\l- plotGlobalNavigation()\l- parseTrackConfigs()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -nav_writer_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::mad::AWriter\l\< std::pair\< adore::\lenv::BorderBased::BorderID,\l double \> \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -nav_goal_reader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::mad::AReader\l\< adore::fun::NavigationGoal \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -motion_state_reader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore::mad::AReader\l\< adore::env::VehicleMotion\lState9d \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -nav_params_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{adore::params::APNavigation\n||+ getActivePlottingLocal()\l+ getActivePlottingGlobal()\l+ getLaneChangePenalty()\l+ useScenarioManagerMap()\l+ getNagivationGoalStopTolerance\lLateral()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APNavigation.html",tooltip="abstract class containing parameters which configure navigation behaviour"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -figure_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{DLR_TS::PlotLab::FigureStubZMQ\n|- m_id\l|+ FigureStubZMQ()\l+ FigureStubZMQ()\l+ ~FigureStubZMQ()\l+ circlestrip()\l+ tristrip()\l+ tristrip()\l+ tristrip()\l+ patch()\l+ patch()\l+ patch()\land 28 more...\l# send_paint()\l# plotTexture()\l# send_paint()\l# send_other()\l# send_view()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1FigureStubZMQ.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{DLR_TS::PlotLab::AFigureStub\n||+ ~AFigureStub()\l+ circlestrip()\l+ tristrip()\l+ tristrip()\l+ tristrip()\l+ patch()\l+ patch()\l+ patch()\l+ plot()\l+ plot()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1AFigureStub.html",tooltip=" "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_other" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{ZMQObjectProvider\<\l DLR_TS::PlotLab::PLComOther \>\n|- m_socket\l- m_context\l- m_initialized\l|+ ZMQObjectProvider()\l+ ZMQObjectProvider()\l+ ~ZMQObjectProvider()\l+ send()\l- initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classZMQObjectProvider.html",tooltip=" "];
  Node9 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_view" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{ZMQObjectProvider\<\l DLR_TS::PlotLab::PLComView \>\n|- m_socket\l- m_context\l- m_initialized\l|+ ZMQObjectProvider()\l+ ZMQObjectProvider()\l+ ~ZMQObjectProvider()\l+ send()\l- initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classZMQObjectProvider.html",tooltip=" "];
  Node10 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -m_paint" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{ZMQObjectProvider\<\l DLR_TS::PlotLab::PLComPaint \>\n|- m_socket\l- m_context\l- m_initialized\l|+ ZMQObjectProvider()\l+ ZMQObjectProvider()\l+ ~ZMQObjectProvider()\l+ send()\l- initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classZMQObjectProvider.html",tooltip=" "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -figure_factory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{DLR_TS::PlotLab::FigureStub\lFactory\n|- m_context\l- m_url\l|+ FigureStubFactory()\l+ FigureStubFactory()\l+ createFigureStub()\l+ getDummy()\l+ parseCommandLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1FigureStubFactory.html",tooltip=" "];
  Node12 -> Node11 [color="grey25",fontsize="10",style="solid",label=" -dummy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{DLR_TS::PlotLab::DummyFigure\n||+ ~DummyFigure()\l+ circlestrip()\l+ tristrip()\l+ tristrip()\l+ tristrip()\l+ patch()\l+ patch()\l+ patch()\l+ plot()\l+ plot()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDLR__TS_1_1PlotLab_1_1DummyFigure.html",tooltip=" "];
  Node7 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -map_params_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{adore::params::APMapProvider\n||+ getVisibiltyRadius()\l+ getActivatePlotting()\l+ getPlotCompleteMapInLocal\lView()\l+ useScenarioManagerMap()\l+ getXODRLoaderPointsPerBorder()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APMapProvider.html",tooltip="abstract class containing parameters to configure aspects of the map provider"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +config_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{adore::apps::Navigation\l::Config\n|+ trans_x_\l+ trans_y_\l+ trans_z_\l+ rot_x_\l+ rot_y_\l+ rot_z_\l+ rot_psi_\l|+ Config()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1apps_1_1Navigation_1_1Config.html",tooltip=" "];
  Node15 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -nav_management_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{adore::env::NavigationManagement\n|- m_maxCost\l- m_goalChanged\l- m_laneChangePenalty\l- m_borderCosts\l|+ NavigationManagement()\l+ setLaneChangePenalty()\l+ addFeed()\l+ getMaxCost()\l+ hasMap()\l+ init()\l+ update()\l+ goalChanged()\l+ reset()\l+ clear()\l+ setDestination()\l+ run()\l+ getBorderCost()\l+ getBorder()\l+ getGlobalMap()\l- getBorderFromCurrentTarget()\l- setMaxCost()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1NavigationManagement.html",tooltip=" "];
  Node16 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_destination" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{adore::env::BorderBased\l::Coordinate\n|+ m_X\l+ m_Y\l+ m_Z\l|+ Coordinate()\l+ Coordinate()\l+ Coordinate()\l+ Coordinate()\l+ translate()\l+ rotate()\l+ discretize()\l+ distance()\l+ isNear()\l+ operator==()\land 8 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1Coordinate.html",tooltip="This struct represents 3-dimensional coordines."];
  Node17 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_navBorderObserver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{adore::env::BorderBased\l::NavigationBorderObserver\n|- m_changedBordersDuringLast\lUpdate\l- m_finishedUpdating\l|+ NavigationBorderObserver()\l+ init()\l+ update()\l+ navigationReplanningNecessary()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1NavigationBorderObserver.html",tooltip=" "];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{adore::env::BorderBased\l::BorderObserver\n||+ BorderObserver()\l+ update()\l+ discard_radius_based()\l+ addFeed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderObserver.html",tooltip=" "];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node19 [label="{adore::mad::ALocalObserver\l\< Border \>\n|# feed_\l|+ update()\l+ discard_radius_based()\l+ addFeed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1ALocalObserver.html",tooltip=" "];
  Node20 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node21 -> Node15 [color="grey25",fontsize="10",style="solid",label=" -m_map" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{adore::env::MapBorderManagement\n|- m_updateQueue\l|+ MapBorderManagement()\l+ getSuccessors()\l+ getBordersAtPoint()\l+ init()\l+ getBorder()\l+ clearLocalMap()\l+ reset()\l+ getGlobalMap()\l+ deleteBordersInRegion()\l+ addBordersInRegion()\land 6 more...\l- initGlobalSet()\l- initBaseSet()\l- do_run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1MapBorderManagement.html",tooltip="Automatically manage local map and necessary updates based on vehicle position and last state of obje..."];
  Node20 -> Node21 [color="grey25",fontsize="10",style="solid",label=" -m_baseSet\n-m_globalSet\n-m_localSet" ,arrowhead="odiamond",fontname="Helvetica"];
}
