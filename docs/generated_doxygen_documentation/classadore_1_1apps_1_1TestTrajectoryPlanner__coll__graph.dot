digraph "adore::apps::TestTrajectoryPlanner"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::TestTrajectory\lPlanner\n||+ TestTrajectoryPlanner()\l+ run()\l+ hasValidPlan()\l+ getProgressSolver()\l+ getOffsetSolver()\l+ getSetPointRequest()\l+ getRoadCoordinateConverter()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="test implementation of a lane following trajectory planner"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -x_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::env::VehicleMotion\lState9d\n|+ time_\l+ data_\l|+ getTime()\l+ getX()\l+ getY()\l+ getZ()\l+ getPSI()\l+ getvx()\l+ getvy()\l+ getOmega()\l+ getAx()\l+ getDelta()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1VehicleMotionState9d.html",tooltip="This struct holds the motion state of the vehicle in 9d."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -xreader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::mad::AReader\l\< adore::env::VehicleMotion\lState9d \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -trafficMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore::env::traffic\l::TrafficMap\n|- borderToParticipant_\l- participantToBorder_\l- trackingIDToParticipant_\l- participantSet_\l|+ getTrafficParticipantSet()\l+ getBorderSet()\l+ getBorderToParticipant()\l+ getParticipantToBorder()\l+ getTrackingIDToParticipant()\l+ TrafficMap()\l+ TrafficMap()\l+ update()\l+ matchBorders()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1traffic_1_1TrafficMap.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -tpsetReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{adore::mad::AReader\< T \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{adore::params::APVehicle\n||+ get_vehicle_id()\l+ get_a()\l+ get_b()\l+ get_c()\l+ get_d()\l+ get_m()\l+ get_mu()\l+ get_g()\l+ get_h()\l+ get_cf()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APVehicle.html",tooltip="abstract class for vehicle configuration related paremeters"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -planner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{adore::fun::BasicLaneFollowing\lPlanner\< K, P \>\n||+ BasicLaneFollowingPlanner()\l+ addConstraint()\l+ addReference()\l+ setSpeedScale()\l+ setConflictSet()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1BasicLaneFollowingPlanner.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{adore::fun::DecoupledLFLCPlanner\l\< K, P \>\n|+ N\l+ R\l- progress_solver_\l- offset_solver_\l- s0\l- ds0\l- dds0\l- n0\l- dn0\l- ddn0\l- psi0\l- omega0\l- t0\l- T_\l- T_end_\l- valid_\l- step_\l|+ DecoupledLFLCPlanner()\l+ setPlanningHorizon()\l+ getPlanningHorizon()\l+ getInformationSet()\l+ getProgressSolver()\l+ getOffsetSolver()\l+ getRoadCoordinateConverter()\l+ getStatus()\l+ compute()\l+ hasValidPlan()\l+ getSetPointRequest()\l+ getCPUTime()\l- init_progress_default\l_cost()\l- init_offset_default\l_cost()\l- initialize()\l- prepare_progress_computation()\l- prepare_offset_computation()\l- update_guard()\l- update_progress_parameters()\l- update_offset_parameters()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1DecoupledLFLCPlanner.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{adore::fun::ANominalPlanner\n||+ compute()\l+ hasValidPlan()\l+ getSetPointRequest()\l+ getCPUTime()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1ANominalPlanner.html",tooltip=" "];
  Node7 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -apvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -headingConstraintLB\l_\n-headingConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{adore::fun::HeadingConstraint\n|- heading_ub_\l- heading_lb_\l- d_\l|+ HeadingConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1HeadingConstraint.html",tooltip=" "];
  Node23 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -followCenterlineReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{adore::fun::FollowCenterline\lReference\n|- d_\l- dmax_\l- w_\l- i_grid_\l|+ FollowCenterlineReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowCenterlineReference.html",tooltip=" "];
  Node7 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -p_veh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node23 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{adore::view::ALane\n||+ isValid()\l+ getSMax()\l+ getSMin()\l+ inSRange()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\l+ getSpeedLimit()\l+ getLeftIndicatorHint()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALane.html",tooltip=" "];
  Node25 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -curvatureSpeedLimit_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{adore::fun::CurvatureSpeed\lLimitPredict\n|- sstep_\l- smax_\l- s_curvature_lookahead_\l- a\l|+ CurvatureSpeedLimitPredict()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1CurvatureSpeedLimitPredict.html",tooltip=" "];
  Node27 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lowerBoundSGapToPreceding\lVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{adore::fun::LowerBoundSGap\lToPrecedingVehicle\n|- s_front_t0_\l- v_front_t0_\l- t0_\l- amin_\l|+ LowerBoundSGapToPreceding\lVehicle()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LowerBoundSGapToPrecedingVehicle.html",tooltip=" "];
  Node7 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 [label="{adore::params::APTactical\lPlanner\n||+ getGlobalSpeedLimit()\l+ getResetRadius()\l+ getAccLatUB()\l+ getAccLatUB_minVelocity()\l+ getAccLonUB()\l+ getAccLonLB()\l+ getFrontTimeGap()\l+ getRearTimeGap()\l+ getFrontSGap()\l+ getLowerBoundFrontSGapForLF()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APTacticalPlanner.html",tooltip="abstract classs containing parameters to configure aspects and constraints of the tactical planner"];
  Node29 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -dontDriveBackwards_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node29 [label="{adore::fun::DontDriveBackwards\n||+ DontDriveBackwards()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1DontDriveBackwards.html",tooltip=" "];
  Node30 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lateralOffsetConstraint\lLFLB_\n-lateralOffsetConstraint\lLFUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node30 [label="{adore::fun::LateralOffset\lConstraintLF\n|- width_\l- hard_safety_distance_\l- soft_safety_distance_\l- min_control_space_\l- delay_s_\l- delay_n_\l- s0_\l- d_\l|+ LateralOffsetConstraintLF()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralOffsetConstraintLF.html",tooltip=" "];
  Node7 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -pv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node30 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node31 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lateralJerkReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node31 [label="{adore::fun::LateralJerkReference\n||+ LateralJerkReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralJerkReference.html",tooltip=" "];
  Node15 -> Node31 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -stopAtNextGoalPoint_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 [label="{adore::fun::StopAtNextGoal\lPoint\n|- s_max_\l|+ StopAtNextGoalPoint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1StopAtNextGoalPoint.html",tooltip=" "];
  Node7 -> Node32 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lateralAccelerationReference_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{adore::fun::LateralAcceleration\lReference\n||+ LateralAccelerationReference()\l+ getValueIfAvailable()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralAccelerationReference.html",tooltip=" "];
  Node15 -> Node34 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -longitudinalAcceleration\lConstraintLB_\n-longitudinalAccelerationConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node35 [label="{adore::fun::Longitudinal\lAccelerationConstraint\n|- ax_ub_\l- ax_lb_\l- ax_ub_slow_\l- v_ax_ub_slow_\l- ds0_\l- t0_\l- d_\l|+ LongitudinalAcceleration\lConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LongitudinalAccelerationConstraint.html",tooltip=" "];
  Node36 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -stopAtCheckPoint_\n-stopAtRedLight_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node36 [label="{adore::fun::AdhereToNext\lLimitLine\n|- s_max_\l- drivable_states_\l- clearance_states_\l|+ AdhereToNextLimitLine()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1AdhereToNextLimitLine.html",tooltip=" "];
  Node7 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node36 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node38 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -followPrecedingVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node38 [label="{adore::fun::FollowPreceding\lVehicle_BreakingCurve\n|- s_front_t0_\l- v_front_t0_\l- t0_\l- amin_\l|+ FollowPrecedingVehicle\l_BreakingCurve()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1FollowPrecedingVehicle__BreakingCurve.html",tooltip=" "];
  Node7 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -pveh_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node38 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node39 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -stopAtNextConflictPoint_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node39 [label="{adore::fun::StopAtNextConflict\lPoint\n|- distance_to_point_\l- smax_\l|+ setView()\l+ StopAtNextConflictPoint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1StopAtNextConflictPoint.html",tooltip=" "];
  Node7 -> Node39 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -laneWidthSpeedLimitLFV_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node41 [label="{adore::fun::LaneWidthSpeed\lLimitLFV\n|- min_width_stop_\l- min_width_slow_\l- min_width_slow_speed_\l- min_width_fast_\l- min_width_fast_speed_\l|+ LaneWidthSpeedLimitLFV()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LaneWidthSpeedLimitLFV.html",tooltip=" "];
  Node15 -> Node41 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lateralAccelerationConstraint\lLB_\n-lateralAccelerationConstraintUB_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node42 [label="{adore::fun::LateralAcceleration\lConstraint\n|- ay_ub_\l- ay_lb_\l- curvature_ub_\l- curvature_lb_\l- d_\l|+ LateralAccelerationConstraint()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LateralAccelerationConstraint.html",tooltip=" "];
  Node15 -> Node42 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -lfvSpeedLimit_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 [label="{adore::fun::LFVSpeedLimit\n|- globalSpeedLimit_\l- amin_\l- t0_\l- ds0_\l|+ LFVSpeedLimit()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1LFVSpeedLimit.html",tooltip=" "];
  Node15 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node43 [color="grey25",fontsize="10",style="solid",label=" -p_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -stopAtBottleneckLFV_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node44 [label="{adore::fun::StopAtBottleneckLFV\n|- distance_\l- ds_sample_\l|+ StopAtBottleneckLFV()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1StopAtBottleneckLFV.html",tooltip=" "];
  Node7 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -pv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node44 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node45 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -nominalReferenceSpeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node45 [label="{adore::fun::NominalReference\lSpeed\n|- constraintClearance_\l- speed_scale_\l|+ NominalReferenceSpeed()\l+ getValueIfAvailable()\l+ setSpeedScale()\l+ update()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1NominalReferenceSpeed.html",tooltip=" "];
  Node15 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node43 -> Node45 [color="grey25",fontsize="10",style="solid",label=" -lFVSpeedLimit_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -keepDistanceToLaneEnd_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node46 [label="{adore::fun::DistanceToLane\lEndConstraint\n|- stopDistance_\l- distance_\l|+ DistanceToLaneEndConstraint()\l+ update()\l+ getValue()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1DistanceToLaneEndConstraint.html",tooltip=" "];
  Node7 -> Node46 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node46 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node46 [color="grey25",fontsize="10",style="solid",label=" -ptac_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node47 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -breakAtHorizon_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node47 [label="{adore::fun::BreakAtHorizon\n|- distance_\l|+ BreakAtHorizon()\l+ getValue()\l+ update()\l+ getDirection()\l+ getDimension()\l+ getDerivative()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1fun_1_1BreakAtHorizon.html",tooltip=" "];
  Node7 -> Node47 [color="grey25",fontsize="10",style="solid",label=" -pvehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node47 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node28 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pTacticalPlanner_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node48 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -envFactory_\n-funFactory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node48 [label="{adore::env::AFactory\n||+ getBorderWriter()\l+ getBorderFeed()\l+ getBorderTypeChangeProfile\lFeed()\l+ getBorderTypeChangeProfile\lWriter()\l+ getVehicleMotionStateReader()\l+ getTrafficParticipantSet\lReader()\l+ getNavigationGoalReader()\l+ getNavigationDataWriter()\l+ getNavigationDataFeed()\l+ getPrecedenceRuleWriter()\land 37 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1AFactory.html",tooltip="abstract factory for adore::env communication"];
  Node49 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -wwriter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node49 [label="{adore::mad::AWriter\l\< adore::fun::SetPointRequest \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node50 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -lfv_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node50 [label="{adore::env::BorderBased\l::LaneFollowingView\n||+ LaneFollowingView()\l+ LaneFollowingView()\l+ getConflictSetPlotData()\l+ update()\l+ getLocalRoadMap()\l+ getBordersToPrint()\l+ getGeometry()\l+ isValid()\l+ getSMax()\l+ getSMin()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LaneFollowingView.html",tooltip="LaneFollowingview provides traffic related information for the current lane."];
  Node15 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node51 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -elt_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node51 [label="{adore::env::traffic\l::EgoLaneTraffic\n|- queue_\l|+ EgoLaneTraffic()\l+ getQueue()\l+ getTrafficMap()\l+ mapVehiclesOnBorders()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1traffic_1_1EgoLaneTraffic.html",tooltip=" "];
  Node4 -> Node51 [color="grey25",fontsize="10",style="solid",label=" -trafficMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node52 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -apLFV_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node52 [label="{adore::params::APLaneFollowingView\n||+ getLookAhead()\l+ getLookBehind()\l+ getPlanningTime()\l+ getBaselineFitSmoothness()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLaneFollowingView.html",tooltip="abstract class containing parameters for a lane following view"];
  Node53 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -lrm_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node53 [label="{adore::env::BorderBased\l::LocalRoadMap\n|- lanesNearVehicle_\l|+ LocalRoadMap()\l+ getEgoState()\l+ getBorderSet()\l+ getPrecedenceSet()\l+ getVehicleState()\l+ getVehicleParameters()\l+ getBorderTrace()\l+ getMatchedBorder()\l+ getBorderCostMap()\l+ isNavigationActive()\l+ getNavigationCost()\l+ updateEgoState()\l+ update()\l+ getControlledConnectionSet()\l- updateData()\l- discard_radius_based()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LocalRoadMap.html",tooltip=" "];
  Node54 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -borderTrace_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node54 [label="{adore::env::BorderBased\l::BorderTrace\n|- m_trace\l- m_distance_limit\l- m_length\l|+ BorderTrace()\l+ BorderTrace()\l+ setDistanceLimit()\l+ getDistanceLimit()\l+ insert()\l+ begin()\l+ end()\l+ rbegin()\l+ rend()\l+ clear()\l+ front()\l+ back()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderTrace.html",tooltip=" "];
  Node5 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -vehicleReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -egoState_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node55 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -precedenceSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node55 [label="{adore::env::PrecedenceSet\n|- precedenceRT_\l|+ PrecedenceSet()\l+ PrecedenceSet()\l+ update()\l+ readFile()\l+ parseRule()\l+ insertRule()\l+ init()\l+ contains()\l+ eraseRule()\l+ getRulesInRegion()\l+ getAllRulesIt()\l+ getAllRules()\l+ getRulesOutsideRegion()\l+ refocus()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1PrecedenceSet.html",tooltip="PrecedenceSet contains PrecedenceRules, indexed by the area they affect."];
  Node6 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -apVehicle_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node57 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -borderCostMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node57 [label="{adore::env::BorderBased\l::BorderCostMap\n||+ getRandomBorderIDCostPair()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderCostMap.html",tooltip=" "];
  Node59 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -borderFeed_\n-navigationDataFeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node59 [label="{adore::mad::AFeed\< T \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node60 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -lms_continuation_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node60 [label="{adore::env::BorderBased\l::LMSContinuation\n|- m_lastMatch_initialized\l- m_delayedSwitching\l- m_a\l- m_b\l- m_c\l- m_d\l- m_w\l|+ LMSContinuation()\l+ setDimensions()\l+ getBestMatch()\l+ reset()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LMSContinuation.html",tooltip=" "];
  Node6 -> Node60 [color="grey25",fontsize="10",style="solid",label=" -m_borderSet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node65 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -matchedLane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node65 [label="{adore::env::BorderBased\l::Border\n|+ m_type\l|+ Border()\l+ ~Border()\l+ operator=()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\l+ Border()\land 30 more...\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1Border.html",tooltip="The border struct contains data of the smallest."];
  Node71 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -connectionSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node71 [label="{adore::env::ControlledConnectionSet\n|- feeds_\l- max_value_\l|+ ControlledConnectionSet()\l+ ~ControlledConnectionSet()\l+ update()\l+ getConnectionsInRegion()\l+ size()\l+ getAllConnections()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ControlledConnectionSet.html",tooltip=" "];
  Node75 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -apLocalRoadMap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node75 [label="{adore::params::APLocalRoadMap\n||+ getDiscardRadius()\l+ isNavigationActive()\l+ getBorderTraceLength()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1APLocalRoadMap.html",tooltip="abstract class to configure the local view of the road map"];
  Node76 -> Node53 [color="grey25",fontsize="10",style="solid",label=" -lms_navigation_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node76 [label="{adore::env::BorderBased\l::LMSNavigation\n|- m_lastMatch_initialized\l|+ LMSNavigation()\l+ getBestMatch()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LMSNavigation.html",tooltip=" "];
  Node6 -> Node76 [color="grey25",fontsize="10",style="solid",label=" -m_borderSet" ,arrowhead="odiamond",fontname="Helvetica"];
  Node57 -> Node76 [color="grey25",fontsize="10",style="solid",label=" -m_borderID2Cost" ,arrowhead="odiamond",fontname="Helvetica"];
  Node60 -> Node76 [color="grey25",fontsize="10",style="solid",label=" -m_continuationStrategy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node77 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -cs_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node77 [label="{adore::env::BorderBased\l::ConflictSet\n|- ca_\l- corner_points_vec\l- overlap_sets\l- overlapping_borders\l- right_borders_of_conf\l_lanes\l- valid_\l|+ ConflictSet()\l+ getConflictAreas()\l+ isValid()\l+ update()\l+ assembleConflictZones()\l+ mapParticipantsToConflict\lZones()\l+ getCornerPoints()\l+ getOverlapSet()\l+ get_right_borders_of\l_conf_lanes()\l+ getBordersToPrint()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1ConflictSet.html",tooltip=" "];
  Node79 -> Node77 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node79 [label="{adore::env::BorderBased\l::LaneFollowingGeometry\l\< 20, 200 \>\n|+ m_velocity_fct\l+ m_leftBorder_fct\l+ m_rightBorder_fct\l+ m_centerRaw_fct\l+ m_centerSmoothed_fct\l+ m_centerSmoothedDerivative1_fct\l+ m_centerSmoothedDerivative2_fct\l+ m_centerNormal_fct\l+ m_centerHeading_fct\l+ m_centerSmoothedCurvature_fct\land 28 more...\l|+ LaneFollowingGeometry()\l+ update()\l+ computeNavigationCost()\l+ excludeObstaclePoint()\l+ getRightBorders()\l+ getLeftBorders()\l+ getBestMatchingBorder()\l+ isValid()\l+ getViewingDistance()\l+ getSMax()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1LaneFollowingGeometry.html",tooltip=" "];
  Node79 -> Node50 [color="grey25",fontsize="10",style="solid",label=" -lfg_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node53 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -roadmap_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node80 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -paramsFactory_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node80 [label="{adore::params::AFactory\n||+ getVehicle()\l+ getTrajectoryGeneration()\l+ getTrajectoryTracking()\l+ getTacticalPlanner()\l+ getMapProvider()\l+ getTrafficLightSim()\l+ getNavigation()\l+ getCooperation()\l+ getEmergencyOperation()\l+ getFunctionmanagement()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1params_1_1AFactory.html",tooltip="abstract factory for adore::params classes"];
}
