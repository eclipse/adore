digraph "adore::apps::PlatoonViewProvider"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{adore::apps::PlatoonView\lProvider\n|- localCooperativeUserList\l- index\l- vehiclePlatooningCapability\l- automationLevel\l|+ PlatoonViewProvider()\l+ ~PlatoonViewProvider()\l+ run()\l- getIndex()\l- readCooperativeUser()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cooperativeUserPrediction\l_reader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{adore::mad::AReader\l\< adore::env::CooperativeUser\lPrediction \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -x_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{adore::env::VehicleMotion\lState9d\n|+ time_\l+ data_\l|+ getTime()\l+ getX()\l+ getY()\l+ getZ()\l+ getPSI()\l+ getvx()\l+ getvy()\l+ getOmega()\l+ getAx()\l+ getDelta()\land 10 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1VehicleMotionState9d.html",tooltip="This struct holds the motion state of the vehicle in 9d."];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -xreader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{adore::mad::AReader\l\< adore::env::VehicleMotion\lState9d \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cooperativeUser" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{adore::env::CooperativeUser\lPrediction\n|+ id\l+ toletated_distance\l_behind\l+ toletated_distance\l_ahead\l+ target_automation_level\l+ lane_position\l+ vehicleLength\l+ vehicleWidth\l+ communicationDelay\l+ x\l+ y\land 6 more...\l|+ setId()\l+ setLanePosition()\l+ setTargetAutomationLevel()\l+ setToletatedDistanceBehind()\l+ setToletatedDistanceAhead()\l+ setVehicleLength()\l+ setVehicleWidth()\l+ clear()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1CooperativeUserPrediction.html",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -connectionsOnLane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{adore::env::ConnectionsOnLane\n|- mappedcons_\l|+ hasLimitLine()\l+ getLimitLine()\l+ ConnectionsOnLane()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ConnectionsOnLane.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{adore::view::ALimitLineEn\lRoute\n||+ hasLimitLine()\l+ getLimitLine()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALimitLineEnRoute.html",tooltip=" "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -lane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{adore::view::ALane\n||+ isValid()\l+ getSMax()\l+ getSMin()\l+ inSRange()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\l+ getSpeedLimit()\l+ getLeftIndicatorHint()\land 11 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALane.html",tooltip=" "];
  Node9 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -conset_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{adore::env::ControlledConnectionSet\n|- feeds_\l- max_value_\l|+ ControlledConnectionSet()\l+ ~ControlledConnectionSet()\l+ update()\l+ getConnectionsInRegion()\l+ size()\l+ getAllConnections()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ControlledConnectionSet.html",tooltip=" "];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -data_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{adore::env::LocalBoxSet\l\< ControlledConnection,\l BoxGen, Comparator \>\n|- data_\l|+ insert()\l+ find()\l+ contains()\l+ remove()\l+ size()\l+ getObjectsInRegion()\l+ getObjectsOutsideRegion()\l+ refocus()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1LocalBoxSet.html",tooltip=" "];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -compare_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{adore::env::ControlledConnection\lSet::Comparator\n||+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1ControlledConnectionSet_1_1Comparator.html",tooltip=" "];
  Node12 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -boxgen_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{adore::env::ControlledConnection\lSet::BoxGen\n||+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1ControlledConnectionSet_1_1BoxGen.html",tooltip=" "];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -cooperativeUserList\l_writer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{adore::mad::AWriter\l\< adore::env::CooperativeUsers\lList \>\n||+ canWriteMore()\l+ write()\l+ getDesc()\l+ getNumberOfSubscribers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AWriter.html",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -connectionSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -three_lanes_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{adore::env::ThreeLaneView\lDecoupled\n|- participantSet_\l- monitor_traffic_\l|+ ThreeLaneViewDecoupled()\l+ ~ThreeLaneViewDecoupled()\l+ update()\l+ getCurrentLane()\l+ getLeftLaneChange()\l+ getRightLaneChange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ThreeLaneViewDecoupled.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{adore::view::AThreeLaneView\n||+ getCurrentLane()\l+ getLeftLaneChange()\l+ getRightLaneChange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1AThreeLaneView.html",tooltip=" "];
  Node16 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -tpsetReader_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{adore::mad::AReader\< T \>\n||+ hasData()\l+ hasUpdate()\l+ getData()\l+ getDesc()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AReader.html",tooltip=" "];
  Node17 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -borderSet_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{adore::env::BorderBased\l::BorderSet\n|# m_coord_uncertainty_xy\l# m_coord_uncertainty_z\l# m_guard\l# m_max_lane_width\l# m_byID\l# m_byLeftID\l# m_byFirstCoord\l# m_byLastCoord\l# m_byRegion\l# m_isOwner\l- m_allowedBorderTypes\l|+ BorderSet()\l+ ~BorderSet()\l+ addAllowedType()\l+ rotate()\l+ translate()\l+ removeAllowedType()\l+ borderTypeValid()\l+ setIsOwner()\l+ insert_border()\l+ erase_border()\land 46 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1BorderBased_1_1BorderSet.html",tooltip="efficiently store borders in boost R-tree"];
  Node18 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -laneFeed_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{adore::mad::AFeed\< T \>\n||+ hasNext()\l+ getNext()\l+ getLatest()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AFeed.html",tooltip=" "];
  Node19 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -to_left_\n-to_right_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{adore::env::ThreeLaneView\lDecoupled::LaneChangeViewProxy\n||+ limitS()\l+ LaneChangeViewProxy()\l+ setLanes()\l+ getSourceLane()\l+ getTargetLane()\l+ getLCDirection()\l+ getProgressOfGateOpen()\l+ getProgressOfGateClosed()\l+ getOffsetOfStartOuterBorder()\l+ getOffsetOfSeparatingBorder()\l+ getOffsetOfDestinationOuter\lBorder()\l+ getNavigationCostDifference()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ThreeLaneViewDecoupled_1_1LaneChangeViewProxy.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{adore::view::ALaneChangeView\n||+ getSourceLane()\l+ getTargetLane()\l+ getLCDirection()\l+ getProgressOfGateOpen()\l+ getProgressOfGateClosed()\l+ getOffsetOfStartOuterBorder()\l+ getOffsetOfSeparatingBorder()\l+ getOffsetOfDestinationOuter\lBorder()\l+ getNavigationCostDifference()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1view_1_1ALaneChangeView.html",tooltip=" "];
  Node21 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +data_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{adore::env::BorderBased\l::LaneChangeDataProxy\n|+ gate_s0\l+ gate_s1\l+ direction\l+ isValid\l+ viewingDistance\l|+ LaneChangeDataProxy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1LaneChangeDataProxy.html",tooltip="simple struct to hole data relevant to lane change geometry"];
  Node22 -> Node21 [color="grey25",fontsize="10",style="solid",label=" +separatingBorderDistance\l_fct\n+sourceOuterBorderDistance\l_fct\n+targetOuterBorderDistance_fct" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{adore::mad::LLinearPiecewise\lFunctionM\< double, 1 \>\n|- m_data\l- m_searchIndex\l|+ getData()\l+ getData()\l+ findIndex()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ create_derivative()\l+ bound()\l+ limit_s_to_bounds()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node23 [label="{adore::mad::AScalarToN\l\< double, n \>\n||+ toArray()\l+ toArray()\l+ dimension()\l+ fi()\l+ multiply()\l+ add()\l+ operator*=()\l+ operator+=()\l+ operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AScalarToN.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node24 [label="{adore::mad::ALFunction\l\< DT, CT \>\n|- cached_ymin\l- cached_ymax\l- cached_bounds_valid\l|+ setLimits()\l+ limitHi()\l+ limitLo()\l+ f()\l+ clone()\l+ create_derivative()\l+ bound()\l+ ~ALFunction()\l+ ALFunction()\l+ operator()()\l+ isInDomain()\l+ f_bounded()\l+ f()\l+ bound()\l+ invalidateCachedBounds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1ALFunction.html",tooltip=" "];
  Node25 -> Node22 [color="grey25",fontsize="10",style="solid",label=" -single_dimensions" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{adore::mad::LLinearPiecewise\lFunctionM\< T, n \>::OneDimension\n|- m_row\l|+ OneDimension()\l+ OneDimension()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ clone()\l+ create_derivative()\l+ bound()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM_1_1OneDimension.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node26 [label="{adore::mad::ALFunction\l\< DT, T \>\n|- cached_ymin\l- cached_ymax\l- cached_bounds_valid\l|+ setLimits()\l+ limitHi()\l+ limitLo()\l+ f()\l+ f()\l+ clone()\l+ create_derivative()\l+ bound()\l+ bound()\l+ ~ALFunction()\l+ ALFunction()\l+ operator()()\l+ isInDomain()\l+ f_bounded()\l+ invalidateCachedBounds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1ALFunction.html",tooltip=" "];
  Node27 -> Node25 [color="grey25",fontsize="10",style="solid",label=" -m_parent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node27 [label="{adore::mad::LLinearPiecewise\lFunctionM\< T, n \>\n|- m_data\l- m_searchIndex\l|+ getData()\l+ getData()\l+ findIndex()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ create_derivative()\l+ bound()\l+ limit_s_to_bounds()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM.html",tooltip=" "];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node28 [label="{adore::mad::AScalarToN\l\< T, n \>\n||+ toArray()\l+ toArray()\l+ dimension()\l+ fi()\l+ multiply()\l+ add()\l+ operator*=()\l+ operator+=()\l+ operator-=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1AScalarToN.html",tooltip=" "];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node29 [label="{adore::mad::ALFunction\l\< T, adoreMatrix\< T, N,\l 1 \> \>\n|- cached_ymin\l- cached_ymax\l- cached_bounds_valid\l|+ setLimits()\l+ limitHi()\l+ limitLo()\l+ f()\l+ f()\l+ clone()\l+ create_derivative()\l+ bound()\l+ bound()\l+ ~ALFunction()\l+ ALFunction()\l+ operator()()\l+ isInDomain()\l+ f_bounded()\l+ invalidateCachedBounds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1ALFunction.html",tooltip=" "];
  Node25 -> Node27 [color="grey25",fontsize="10",style="solid",label=" -single_dimensions" ,arrowhead="odiamond",fontname="Helvetica"];
  Node30 -> Node19 [color="grey25",fontsize="10",style="solid",label=" +source_\n+target_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node30 [label="{adore::env::ThreeLaneView\lDecoupled::LaneProxy\n|+ s_offset_\l|+ LaneProxy()\l+ limitS()\l+ isValid()\l+ getSMax()\l+ getSMin()\l+ syncS()\l+ getProgressOfWidthOpen()\l+ getProgressOfWidthClosed()\l+ getOnLaneTraffic()\l+ getConflictSet()\land 13 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1ThreeLaneViewDecoupled_1_1LaneProxy.html",tooltip=" "];
  Node8 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node31 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +data_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node31 [label="{adore::env::BorderBased\l::LaneGeometryDataProxy\n|+ isValid\l|+ LaneGeometryDataProxy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structadore_1_1env_1_1BorderBased_1_1LaneGeometryDataProxy.html",tooltip=" "];
  Node22 -> Node31 [color="grey25",fontsize="10",style="solid",label=" +centerSmoothedCurvature\lDerivative_fct\n+centerSmoothedCurvature\l_fct\n+leftDistance_fct\n+left_indicator_hint\l_fct\n+navigationCost_fct\n+rightDistance_fct\n+right_indicator_hint\l_fct\n+speedLimit_fct" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 -> Node31 [color="grey25",fontsize="10",style="solid",label=" +centerSmoothed_fct" ,arrowhead="odiamond",fontname="Helvetica"];
  Node32 [label="{adore::mad::LLinearPiecewise\lFunctionM\< double, 3 \>\n|- m_data\l- m_searchIndex\l|+ getData()\l+ getData()\l+ findIndex()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ create_derivative()\l+ bound()\l+ limit_s_to_bounds()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM.html",tooltip=" "];
  Node23 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node25 -> Node32 [color="grey25",fontsize="10",style="solid",label=" -single_dimensions" ,arrowhead="odiamond",fontname="Helvetica"];
  Node33 -> Node31 [color="grey25",fontsize="10",style="solid",label=" +centerNormal_fct" ,arrowhead="odiamond",fontname="Helvetica"];
  Node33 [label="{adore::mad::LLinearPiecewise\lFunctionM\< double, 2 \>\n|- m_data\l- m_searchIndex\l|+ getData()\l+ getData()\l+ findIndex()\l+ f()\l+ limitHi()\l+ limitLo()\l+ setLimits()\l+ create_derivative()\l+ bound()\l+ limit_s_to_bounds()\land 42 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1mad_1_1LLinearPiecewiseFunctionM.html",tooltip=" "];
  Node23 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node25 -> Node33 [color="grey25",fontsize="10",style="solid",label=" -single_dimensions" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 -> Node30 [color="grey25",fontsize="10",style="solid",label=" +queueOnThisLane_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node34 [label="{adore::env::traffic\l::TrafficQueueOnALane\n|- queue_\l|+ getQueue()\l+ mapVehicles()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classadore_1_1env_1_1traffic_1_1TrafficQueueOnALane.html",tooltip=" "];
  Node30 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -center_\n-left_\n-right_" ,arrowhead="odiamond",fontname="Helvetica"];
}
