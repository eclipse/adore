<!--********************************************************************************
 * Copyright (C) 2017-2020 German Aerospace Center (DLR). 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 *
 * This program and the accompanying materials are made available under the 
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 
 *
 * Contributors: 
 *   Matthias Nichting - initial API and implementation
 *   Daniel HeÃŸ - simplified and parametrized, documentation
 *   Demo showcases use of scheduler for simulation.
 *   set headless:=true to deactivate plot output 
 ********************************************************************************-->
<launch>
<arg name="headless" default="false" doc="activate or deactivate plotting"/>
<param name="/use_sim_time" value="true"/>
<param name="/tcp_no_delay" value="true"/>
<param name="/use_scheduler" value="true"/>
<param name="/PARAMS/SIM/timeout" value="130.0" type="double"/>
<node name="scheduler" pkg="adore_scheduler" type="adore_scheduler_node" output="screen" launch-prefix="xterm -e" required="true">
</node>
<group if="$(eval arg('headless')==true)">
    <param name="/number_of_nodes" value="8" type="int"/>
</group>
<group if="$(eval arg('headless')==false)">
    <param name="/number_of_nodes" value="12" type="int"/>
</group>

<group ns="vehicle0">
    <group if="$(eval arg('headless')==false)">
        <include file="demo_plotters.launch"/>
    </group>
    <include file="demo_vehicle_cfg02.launch"/>
    <param name="PARAMS/track" value="$(dirname)/tracks/basic_test_track.xodr" type="str" />
    <param name="PARAMS/local_road_map/navigation_active" value="false" type="bool" />
    <param name="PARAMS/navigation/active_plotting_global" value="false" type="bool" />  
    <param name="PARAMS/tactical_planner/global_speed_limit" value="30" type="double" />  
    <param name="simulationID" value="0" type="int" />  
    <!-- set the start position -->
    <node pkg="rostopic" type="rostopic" name="posereset" args="pub /vehicle0/SIM/ResetVehiclePose geometry_msgs/Pose '{position: {x: 150, y: 162, z: 0},orientation: { w: 1}}'"/>

    <!-- monitor node -->
    <node pkg="adore_if_ros" type="adore_monitor0_node" name="monitor0"/>
</group>
<!--terminator node--> 
<node pkg="adore_if_ros" type="adore_ci_terminator_node.py" name="terminator" required="true" output="screen"/>
</launch>
